[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'thinca/vim-singleton'
hook_source = '''
	call singleton#enable()
'''

[[plugins]]
repo = 'mattn/webapi-vim'
[[plugins]]
repo = 'mattn/wwwrenderer-vim'

[[plugins]]
repo = 'thinca/vim-ref'
hook_add = '''
	let g:ref_source_webdict_cmd = '=wwwrenderer#render("%s")'
	let g:ref_source_webdict_use_cache = 1

	let g:ref_source_webdict_sites = {
\		'je': {
\			'url': 'http://dictionary.infoseek.ne.jp/jeword/%s',
\		},
\		'ej': {
\			'url': 'http://dictionary.infoseek.ne.jp/ejword/%s',
\		},
\	}

	function! g:ref_source_webdict_sites.je.filter(output)
		return join(split(a:output, "\n")[25 :], "\n")
	endfunction

	function! g:ref_source_webdict_sites.ej.filter(output)
		return join(split(a:output, "\n")[25 :], "\n")
	endfunction

	" 辞書(Webを使用)
	nnoremap ,dw :<C-u>Ref webdict 
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
hook_add = '''
	let g:neomru#file_mru_limit = 1000000
	let g:neomru#directory_mru_limit = 1000000
'''

[[plugins]]
repo = 'Shougo/neossh.vim'

[[plugins]]
repo = 'airblade/vim-rooter'
hook_add = '''
	let g:rooter_use_lcd = 0
	let g:rooter_patterns = ['GTAGS', '.git/', '.svn/', '.root/']
'''

[[plugins]]
repo = 'fuenor/qfixhowm'
hook_add = '''
	let g:QFix_Height = 6
	let g:QFix_PreviewHeight = 24
	let g:QFixHowm_Key = ','
	let g:QFixHowm_KeyB = 'h'
	let g:QFixHowm_CalendarWinCmd = 'vertical botright'
	" ripgrepを使う（PATHは通してある前提）
	let g:mygrepprg='rg'
	" 実行時のオプションをripgrep用に変更（GNU Grepと同じ出力になるように）
	let g:MyGrepcmd_useropt='-nH --no-heading --color never'
	let g:MyGrepcmd_regexp=''
	let g:MyGrepcmd_regexp_ignore='-i'
	let g:MyGrepcmd_fix='-F'
	let g:MyGrepcmd_fix_ignore='-F -i'
	let g:MyGrepcmd_recursive=''
	" gipgrepにファイルパターンとして「*」「*.*」を渡したらエラーになったのでその対策
	let g:MyGrep_GrepFilePattern='.'
'''

[[plugins]]
repo = 'ujihisa/unite-colorscheme'

[[plugins]]
repo = 'itchyny/landscape.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
	let g:airline_powerline_fonts = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

#[[plugins]]
#repo = 'itchyny/lightline.vim'
#hook_add = '''
#	let g:lightline = {
#\		'active': {
#\			'left': [
#\				['mode', 'paste'],
#\				['readonly', 'filename', 'modified', 'ale'],
#\			]
#\		},
#\		'component_function': {
#\			'ale': 'ALEGetStatusLine'
#\		}
#\	}
#'''

[[plugins]]
repo = 'sheerun/vim-wombat-scheme'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'cohama/agit.vim'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'rhysd/neovim-component'
