[[plugins]]
repo = 'tyru/eskk.vim'
on_i = 1
hook_source = '''
	let g:eskk#dictionary = {
\		'path': '~/.vim/dict/SKK-VIM-JISYO.txt',
\		'sorted': 0,
\		'encoding': 'utf-8',
\	}
	let g:eskk#large_dictionary = {
\		'path': $ALLUSERSPROFILE . '/skk/skki1_5/SKK-JISYO.L',
\		'sorted': 1,
\		'encoding': 'euc-jp',
\	}
	let g:eskk#egg_like_newline = 1
'''

[[plugins]]
repo = 'haya14busa/vim-migemo'
if   = '''! has('nvim')'''
on_i = 1
hook_post_source = '''
	set migemo
	set migemodict=C:\bin\cmigemo\dict\cp932\migemo-dict
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
	let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'hewes/unite-gtags'
on_path = '.*'
hook_source = '''
	" cscope_maps.vim like
	autocmd FileType h,c,cpp,php,javascript,css nnoremap <C-\>s :<C-u>Unite gtags/context -immediately<CR>
	autocmd FileType h,c,cpp,php,javascript,css nnoremap <C-\>g :<C-u>Unite gtags/def -immediately<CR>
	autocmd FileType h,c,cpp,php,javascript,css nnoremap <C-\>c :<C-u>Unite gtags/ref<CR>
	autocmd FileType h,c,cpp,php,javascript,css nnoremap <C-\>e :<C-u>Unite gtags/grep<CR>
'''

[[plugins]]
repo = 'w0rp/ale'
on_path = '.*'
hook_source = '''
	" 保存時のみ実行する
	let g:ale_lint_on_text_changed = 0
	" 表示に関する設定
	let g:ale_sign_error = '⛔'
	let g:ale_sign_warning = '⚠'
	let g:ale_echo_msg_format = '[%linter%]%code: %%s'
'''
hook_post_source = '''
	highlight link ALEErrorSign Tag
	highlight link ALEWarningSign StorageClass
	" Ctrl + kで次の指摘へ、Ctrl + jで前の指摘へ移動
	nmap <silent> <C-k> <Plug>(ale_previous_wrap)
	nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''
